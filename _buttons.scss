

///// ARROWS - this gets added in the before/after of an object
////// in custom.scss in the body/box/feature thing in the :after

@mixin arrow($color){
  position: relative;
  content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%231E3EAF"/></g></svg>');
  height: 40px;
  width: 40px;
  background: $color;
  border-radius: 100%;
  left: 0px;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  transition:.3s;

  &:hover{
    content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23D2E9FF"/></g></svg>');
     background: $medium-blue;
  }

  @if $color == $medium-blue { 
    content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
  }

  @if $color == $primary-blue { 
    content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
  }
}

.arrow-link a{
	@include arrow($primary-blue);
	margin-right: auto;
	margin-left: 0px;
	height: 26px;
  width: 26px;
  padding: 7px;
}




@mixin arrow-btn($color) { //on the P tag
  a{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    color: $color;
    transition: .3s;

    &::after{ // PRIMARY BLUE ARROW 
      position: relative;
      content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%231E3EAF"/></g></svg>');
      height: 40px;
      width: 40px;
      background: $color;
      border-radius: 100%;
      left: 12px;
      display: flex;
      align-items: flex-end;
      justify-content: center;
      transition: .3s;
      flex: none;
    }

    &:hover::after{
    	transition: .3s;
    	background: $light-blue;
    }


    @if $color == $white { 
      color: $white;
      &::after{ background: $white; } /// Keeps Primary blue arrow from default 
      
			&:hover::after{
	      background: $primary-blue; 
	      content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
	    }
    }


    ///// THIS IS THE DEFULAT 
    @if $color == $primary-blue { 
      color: $navy-blue;
       &::after{  // primay blue bg and white arrow
        background: $primary-blue; 
        content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
       }

       &:hover::after{ // medium blue bg and white arrow
          content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
          background: $medium-blue; 
       }
    }


    @if $color == $light-blue {
      color: $primary-blue;

       &::after{  /// DEFAULT PRIMARY ARROW
        background: $light-blue; 
      }

      &:hover::after{ // medium blue bg and white arrow
          content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
          background: $medium-blue; 
      }
    }
  }
}


@mixin back-btn($color) { //on the P tag
  a{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    color: $color;
    transition: .3s;

    &::before{ // PRIMARY BLUE ARROW 
      position: relative;
      content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%231E3EAF"/></g></svg>');
      height: 40px;
      width: 40px;
      background: $color;
      border-radius: 100%;
      right: 12px;
      display: flex;
      align-items: flex-end;
      justify-content: center;
      transition: .3s;
      transform: rotate(180deg);
      flex: none;
    }

    &:hover::before{
      transition: .3s;
      background: $light-blue;
    }


    @if $color == $white { 
      color: $white;
      &::before{ background: $white; } /// Keeps Primary blue arrow from default 
      
      &:hover::before{
        background: $primary-blue; 
        content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
      }
    }


    ///// THIS IS THE DEFULAT 
    @if $color == $primary-blue { 
      color: $navy-blue;
       &::before{  // primay blue bg and white arrow
        background: $primary-blue; 
        content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
       }

       &:hover::before{ // medium blue bg and white arrow
          content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
          background: $medium-blue; 
       }
    }


    @if $color == $light-blue {
      color: $primary-blue;

       &::before{  /// DEFAULT PRIMARY ARROW
        background: $light-blue; 
      }

      &:hover::before{ // medium blue bg and white arrow
          content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
          background: $medium-blue; 
      }
    }
  }
}



@mixin scroll-btn($color) { //on the P tag
  a{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    color: $navy-blue;
    transition: .3s;

    &::after{ // PRIMARY BLUE ARROW 
      position: relative;
      content: url('data:image/svg+xml;charset=UTF-8,<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Icon"><path id="icon" d="M17.3938 14.0287L13.5799 17.8533L15.082 19.3554L21.474 12.9633L15.082 6.57129L13.5799 8.07342L17.3938 11.898H4.42859V14.0287H17.3938Z" fill="%23f5f5f5"/></g></svg>');
      height: 40px;
      width: 40px;
      background: $color;
      border-radius: 100%;
      left: 12px;
      display: flex;
      align-items: flex-end;
      justify-content: center;
      transition: .3s;
			transform: rotate(90deg);
      flex: none;
    }

    &:hover::after{
    	transition: .3s;
    	background: $medium-blue;
    }
  }
}



@mixin external-btn($color) { //on the P tag
  a{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    color: $navy-blue;
    transition: .3s;

    &::after{ // PRIMARY BLUE ARROW 
      position: relative;
      content: url('data:image/svg+xml;charset=UTF-8,<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="22" height="22" viewBox="0 0 22 22" xml:space="preserve"><g transform="scale(0.7586)"><path fill="%23F5F5F5" d="M16.3,14.2c0.4,0,0.8-0.1,1.1-0.4l7.5-7.5v3.9c0,0.4,0.1,0.7,0.4,1s0.6,0.5,1,0.5c0.4,0,0.8-0.1,1.1-0.4c0.3-0.3,0.4-0.6,0.4-1V2.7c0-0.4-0.1-0.8-0.4-1c-0.3-0.3-0.6-0.4-1-0.4H19c-0.4,0-0.8,0.2-1.1,0.5c-0.3,0.3-0.4,0.7-0.4,1.1c0,0.4,0.2,0.7,0.4,1c0.3,0.3,0.6,0.4,1,0.4h3.9l-7.5,7.5c-0.3,0.3-0.4,0.6-0.4,1c0,0.4,0.1,0.7,0.4,1S15.9,14.2,16.3,14.2z"/><path fill="%23F5F5F5" d="M26.5,15.8c-0.8,0-1.5,0.7-1.5,1.5v7.4H4.4V4.1h7.4c0.4,0,0.7-0.1,1-0.4c0.3-0.2,0.4-0.6,0.4-1c0-0.4-0.1-0.7-0.4-1c-0.2-0.3-0.6-0.4-1-0.4H4.4c-0.8,0-1.5,0.3-2.1,0.9C1.7,2.8,1.4,3.5,1.4,4.3v20.6c0,0.8,0.3,1.5,0.9,2.1c0.6,0.6,1.3,0.9,2.1,0.9v-0.2H25c0.8,0,1.5-0.3,2.1-0.9c0.6-0.6,0.9-1.3,0.9-2.1v-7.4C28,16.5,27.3,15.8,26.5,15.8z"/></g></svg>');
      height: 38px;
      width: 40px;
      background: $color;
      border-radius: 100%;
      left: 12px;
      display: flex;
      align-items: flex-end;
      justify-content: center;
      transition: .3s;
			padding-bottom: 2px;
      flex: none;
    }

    &:hover::after{
    	transition: .3s;
    	background: $medium-blue;
    }
  }
}



@mixin email-btn($color) { //on the P tag
  a{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    color: $navy-blue;
    transition: .3s;

    &::after{ // PRIMARY BLUE ARROW 
      position: relative;
			content: url('data:image/svg+xml;charset=UTF-8,<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="26" height="26" x="0px" y="0px" viewBox="0 0 26 26" xml:space="preserve"><g transform="scale(0.65)"><path fill="%23F5F5F5" d="M39,29.2c-0.1-0.2-0.2-0.4-0.4-0.6l-4.9-4.9c-0.3-0.3-0.8-0.5-1.3-0.5s-1,0.2-1.3,0.5c-0.4,0.4-0.6,0.8-0.6,1.3s0.2,1,0.5,1.3l1.7,1.7h-6c-0.5,0-1,0.2-1.3,0.5c-0.4,0.4-0.5,0.8-0.5,1.3s0.2,1,0.5,1.3c0.4,0.4,0.8,0.5,1.3,0.5h6L31,33.3c-0.3,0.3-0.5,0.8-0.5,1.3s0.2,1,0.5,1.3c0.4,0.4,0.8,0.6,1.3,0.5c0.5,0,1-0.2,1.3-0.5l4.9-4.9c0.2-0.2,0.3-0.4,0.4-0.6c0.1-0.2,0.1-0.5,0.1-0.7C39.1,29.7,39.1,29.5,39,29.2z"/><path fill="%23F5F5F5" d="M19.3,28.1H6V11.9l12.1,8.6l12.4-8.7v5c0,0.5,0.2,1,0.5,1.3c0.4,0.4,0.8,0.5,1.3,0.5s0.9-0.2,1.3-0.6c0.4-0.4,0.6-0.8,0.6-1.3V9.2c0-1-0.4-1.9-1.1-2.7c-0.7-0.7-1.6-1.1-2.7-1.1H6c-1,0-1.9,0.4-2.7,1.1C2.6,7.3,2.2,8.2,2.2,9.2v18.9c0,1,0.4,1.9,1.1,2.7C4,31.5,4.9,31.9,6,31.9h13.3c0.5,0,1-0.2,1.3-0.5c0.4-0.4,0.5-0.8,0.5-1.3s-0.2-1-0.5-1.3C20.3,28.2,19.9,28.1,19.3,28.1z M27.7,9.2l-9.6,6.7L8.7,9.2H27.7z"/></g></svg>');

      height: 40px;
      width: 40px;
      background: $color;
      border-radius: 100%;
      left: 12px;
      display: flex;
      align-items: flex-end;
      justify-content: center;
      transition: .3s;
      flex: none;
    }

    &:hover::after{
    	transition: .3s;
    	background: $medium-blue;
    }
  }
}




@mixin download-btn($color){ //on the P tag
  a{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
		color: $color;
		transition: .3s;

    &::after{
      position: relative;
      content: url("data:image/svg+xml,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cpath%20d%3D%22M8%2011.575C7.86667%2011.575%207.74167%2011.5542%207.625%2011.5125C7.50833%2011.4708%207.4%2011.4%207.3%2011.3L3.7%207.7C3.5%207.5%203.40417%207.26667%203.4125%207C3.42083%206.73333%203.51667%206.5%203.7%206.3C3.9%206.1%204.1375%205.99583%204.4125%205.9875C4.6875%205.97917%204.925%206.075%205.125%206.275L7%208.15V1C7%200.716667%207.09583%200.479167%207.2875%200.2875C7.47917%200.0958333%207.71667%200%208%200C8.28333%200%208.52083%200.0958333%208.7125%200.2875C8.90417%200.479167%209%200.716667%209%201V8.15L10.875%206.275C11.075%206.075%2011.3125%205.97917%2011.5875%205.9875C11.8625%205.99583%2012.1%206.1%2012.3%206.3C12.4833%206.5%2012.5792%206.73333%2012.5875%207C12.5958%207.26667%2012.5%207.5%2012.3%207.7L8.7%2011.3C8.6%2011.4%208.49167%2011.4708%208.375%2011.5125C8.25833%2011.5542%208.13333%2011.575%208%2011.575ZM2%2016C1.45%2016%200.979167%2015.8042%200.5875%2015.4125C0.195833%2015.0208%200%2014.55%200%2014V12C0%2011.7167%200.0958333%2011.4792%200.2875%2011.2875C0.479167%2011.0958%200.716667%2011%201%2011C1.28333%2011%201.52083%2011.0958%201.7125%2011.2875C1.90417%2011.4792%202%2011.7167%202%2012V14H14V12C14%2011.7167%2014.0958%2011.4792%2014.2875%2011.2875C14.4792%2011.0958%2014.7167%2011%2015%2011C15.2833%2011%2015.5208%2011.0958%2015.7125%2011.2875C15.9042%2011.4792%2016%2011.7167%2016%2012V14C16%2014.55%2015.8042%2015.0208%2015.4125%2015.4125C15.0208%2015.8042%2014.55%2016%2014%2016H2Z%22%20fill%3D%22%231E3EAF%22/%3E%3C/svg%3E");
      height: 40px;
      width: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      left: 12px;
      background: #ffffff00;
      border-radius: 100%;
    }

    &:hover{
    	&::after{background: $purple;}
    	transition: .3s;
    }
  }
}



@mixin download-blue-btn($color){ //on the P tag
  a{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
		color: $color;
		transition: .3s;

    &::after{
      position: relative;
      content: url("data:image/svg+xml,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cpath%20d%3D%22M8%2011.575C7.86667%2011.575%207.74167%2011.5542%207.625%2011.5125C7.50833%2011.4708%207.4%2011.4%207.3%2011.3L3.7%207.7C3.5%207.5%203.40417%207.26667%203.4125%207C3.42083%206.73333%203.51667%206.5%203.7%206.3C3.9%206.1%204.1375%205.99583%204.4125%205.9875C4.6875%205.97917%204.925%206.075%205.125%206.275L7%208.15V1C7%200.716667%207.09583%200.479167%207.2875%200.2875C7.47917%200.0958333%207.71667%200%208%200C8.28333%200%208.52083%200.0958333%208.7125%200.2875C8.90417%200.479167%209%200.716667%209%201V8.15L10.875%206.275C11.075%206.075%2011.3125%205.97917%2011.5875%205.9875C11.8625%205.99583%2012.1%206.1%2012.3%206.3C12.4833%206.5%2012.5792%206.73333%2012.5875%207C12.5958%207.26667%2012.5%207.5%2012.3%207.7L8.7%2011.3C8.6%2011.4%208.49167%2011.4708%208.375%2011.5125C8.25833%2011.5542%208.13333%2011.575%208%2011.575ZM2%2016C1.45%2016%200.979167%2015.8042%200.5875%2015.4125C0.195833%2015.0208%200%2014.55%200%2014V12C0%2011.7167%200.0958333%2011.4792%200.2875%2011.2875C0.479167%2011.0958%200.716667%2011%201%2011C1.28333%2011%201.52083%2011.0958%201.7125%2011.2875C1.90417%2011.4792%202%2011.7167%202%2012V14H14V12C14%2011.7167%2014.0958%2011.4792%2014.2875%2011.2875C14.4792%2011.0958%2014.7167%2011%2015%2011C15.2833%2011%2015.5208%2011.0958%2015.7125%2011.2875C15.9042%2011.4792%2016%2011.7167%2016%2012V14C16%2014.55%2015.8042%2015.0208%2015.4125%2015.4125C15.0208%2015.8042%2014.55%2016%2014%2016H2Z%22%20fill%3D%22%23f5f5f5%22/%3E%3C/svg%3E");
      height: 40px;
      width: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      left: 12px;
      background: $primary-blue;
      border-radius: 100%;
      flex: none;
    }

    &:hover{
    	&::after{background: $medium-blue;}
    	transition: .3s;
    }
  }
}




@mixin document-btn($color){ //on the P tag
  a{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    color: $color;
    transition: .3s;

    &::after{
      position: relative;
      content: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='22' height='23' viewBox='0 0 22 23' fill='none'><path d='M21.1595 21.3396H19.0166V18.9551L15.8557 22.116L14.3563 20.5894L17.5162 17.4285H15.1055V15.2856H21.1595V21.3396Z' fill='%231E3EAF'/><path d='M17.5706 6.71422V13.1428H15.4277V7.78565H10.0706V2.4285H2.57059V19.5714H12.2134V21.7142H2.57059C1.98131 21.7142 1.47726 21.504 1.05762 21.0843C0.637974 20.6647 0.427734 20.1606 0.427734 19.5714V2.4285C0.427734 1.83922 0.637974 1.33517 1.05762 0.915527C1.47726 0.495884 1.98131 0.285645 2.57059 0.285645H11.142L17.5706 6.71422Z' fill='%231E3EAF'/></svg>");
      height: 40px;
      width: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      left: 12px;
      background: $light-blue;
      border-radius: 100%;
    }

    &:hover{
      &::after{background: $medium-blue;}
      transition: .3s;
    }
  }
}




.arrow-btn { //on the P tag STANDARD IS LIGHT BLUE BACKGROUND?
	span{display: none;}
	@include arrow-btn($light-blue);

	/// FOR WHEN IT IS CENTED IN THE CARD OR COLUMN
	&.align-center{
		@include arrow-btn($primary-blue);
		margin-top: 30px;
		a{ justify-content: center; 
      flex-direction: column;
      &::after{left: 0px;}


      @include tablet {
        flex-direction: row;
        &::after{left: 12px;}
      }
    }
	}
}

.back-btn { //on the P tag STANDARD IS LIGHT BLUE BACKGROUND?
  span{display: none;}
  @include back-btn($primary-blue);

  /// FOR WHEN IT IS CENTED IN THE CARD OR COLUMN
}


.external-btn { //on the P tag
	span{display: none;}
	@include external-btn($primary-blue);

	&.align-center{
			margin-top: 30px;
			a{ justify-content: center;
        flex-direction: column;
        &::after{left: 0px;}
        @include tablet {
          flex-direction: row;
          &::after{left: 12px;}
        }
      }
		}
}


.email-btn { //on the P tag
	span{display: none;}
	@include email-btn($primary-blue);

	&.align-center{
			margin-top: 30px;
			a{ justify-content: center;
        flex-direction: column;
        &::after{left: 0px;}
        @include tablet {
          flex-direction: row;
          &::after{left: 12px;}
        }

      }
		}
}

.scroll-btn { //on the P tag
	span{display: none;}
	@include scroll-btn($primary-blue);

	&.align-center{
			margin-top: 30px;
			a{ justify-content: center;
        flex-direction: column;
        &::after{left: 0px;}
        @include tablet {
          flex-direction: row;
          &::after{left: 12px;}
        }
      }
		}
	}



.document-btn { //on the P tag
  span{display: none;}
  @include document-btn($light-blue);

  &.align-center{
      margin-top: 30px;
      a{ justify-content: center;
        flex-direction: column;
        &::after{left: 0px;}
        @include tablet {
          flex-direction: row;
          &::after{left: 12px;}
        }
      }
    }
  }



.download-btn{
	span{display: none;}
	@include download-btn($navy-blue);

	&.align-center{
			margin-top: 30px;
			a{ justify-content: center;
        flex-direction: column;
        @include tablet {
          flex-direction: row;
        }
      }
		}
	&.circle{
			@include download-blue-btn($navy-blue);
		}
}


.rich-text{
	.arrow-btn { //on the P tag STANDARD IS LIGHT BLUE BACKGROUND?
		span{display: none;}
		@include arrow-btn($light-blue);

		/// FOR WHEN IT IS CENTED IN THE CARD OR COLUMN
		&.align-center{
			@include arrow-btn($primary-blue);
			margin-top: 30px;
			a{ flex-direction: column; justify-content: center; &::after{left: 0;} gap: 10px;}

			@include desktop{
				a{flex-direction: row; &::after{left: 12px;} gap: 0px;}
			}
		}
	}


	.external-btn { //on the P tag
		span{display: none;}
		@include external-btn($primary-blue);

		&.align-center{
			margin-top: 30px;
			a{ justify-content: center;
        flex-direction: column;
        &::after{left: 0;}
        @include tablet {
          flex-direction: row;
          &::after{left: 12px;}
        }
      }
		}
	}


	.email-btn { //on the P tag
		span{display: none;}
		@include email-btn($primary-blue);

		&.align-center{
			margin-top: 30px;
			a{ justify-content: center;
        flex-direction: column;
        &::after{left: 0;}
        @include tablet {
          flex-direction: row;
          &::after{left: 12px;}
        }
      }
		}
	}


	.download-btn{
		span{display: none;}
		@include download-btn($navy-blue);

		&.align-center{
			margin-top: 30px;
			a{ justify-content: center;
        flex-direction: column;
        &::after{left: 0;}
        @include tablet {
          flex-direction: row;
          &::after{left: 12px;}
        }
      }
		}

		&.circle{
			@include download-blue-btn($navy-blue);
		}
	}

}







// Universal button mixin with variant support
@mixin button($color, $text, $variant: solid) {
  padding: 12px 24px;
  border-radius: 30px;
  height: auto;
  font-family: $outfit;
  font-weight: 600 !important;
  font-size: 18px;
  line-height: 27px;
  text-align: center;
  display: inline-block;
  margin-right: auto;

/// TO MAKE NAV ONE WORK - MAKE SURE DOESN'T MESS WITH OTHERS
    white-space: nowrap;
    display: flex;
    width: auto;
    align-items: center;
    gap: 10px;

  span, p{
    font-family: $outfit;
    font-weight: 600;
    font-size: 18px;
    line-height: 27px;
    text-align: center;
    color: $text;
    transition:.3s;

    &:hover{
    	transition:.3s;
    }
  }

  cursor: pointer;
  transition: all 0.2s ease;

  @if $variant == solid {
    background: $color;
    color: $text !important;
    border: none;

    a, span{
    	color: $text !important;
    }

    &:hover{
	  	background: $medium-blue;
	  	color: $light !important;
	  	a, span{
	  		color: $light !important;
	  	}
	  }

  } @else if $variant == outline {
    background: transparent;
    color: $color  !important;
    border: 3px solid $color;

    a, span{
    	color: $text !important;
    }

    &:hover{
	  	color: $medium-blue !important;
    	border: 3px solid $medium-blue;
    	a, span{
    		color: $medium-blue !important;
    	}
	  }
  }

  &:active{
    	background: $navy-blue;
	}
}









.button, a.button{
  @include button($primary-blue, $white); // Default solid
  display: inline-block
}

.button-primary {
  @include button($primary-blue, $white, solid);
  display: inline-block
}

.button-primary-outline {
  @include button($primary-blue, $primary-blue, outline);
  display: inline-block
}




.button-secondary {
  @include button($light-blue, $primary-blue, solid);
  display: inline-block
}

.button-secondary-outline {
  @include button($light-blue, $light-blue, outline);
  display: inline-block
}





.button-white {
  @include button($white, $primary-blue, solid);
  display: inline-block
}

.button-white-outline {
  @include button($white, $white, outline);
  display: inline-block
}









/// RESETS THE BUTTON OPTIONS WITHIN THE COMPONENT 

.component-promo .button-container .button.btn-blue, .component-button .button-container .button.btn-blue {
	@include button($primary-blue, $white); // Default solid
	display: inline-block;
	margin-top: 30px;
	height: auto;
	min-height: 10px;
	line-height: inherit;
}

.component-promo .button-container .button.btn-black, .component-button .button-container .button.btn-black {
	@include button($primary-blue, $primary-blue, outline); // Blue outline
	display: inline-block;
	margin-top: 30px;
	height: auto;
	min-height: 10px;
	line-height: inherit;

	&:hover{
  	@include button($medium-blue, $medium-blue, outline); // Default solid
  }
}

.component-promo .button-container .button.btn-red, .component-button .button-container .button.btn-red {
	@include button($light, $light, outline); // white outline
	display: inline-block;
	margin-top: 30px;
	height: auto;
	min-height: 10px;
	line-height: inherit;
}


.component-promo .button-container .button.btn-green, .component-button .button-container .button.btn-green {
	@include button($light-blue, $primary-blue); // light-blue solid
	display: inline-block;
	margin-top: 30px;
	height: auto;
	min-height: 10px;
	line-height: inherit;
}




